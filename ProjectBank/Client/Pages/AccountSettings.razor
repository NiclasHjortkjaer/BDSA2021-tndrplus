<!---- ROUTING ---->
@page "/account/settings"

<!---- USINGS ATTRIBUTES AND INJECTIONS  ---->
@inject NavigationManager _uriHelper;
@inject AuthenticationStateProvider _authenticationStateProvider;
@inject HttpClient _http


@attribute [Authorize]

<PageTitle>Settings</PageTitle>

<h2>Profile:</h2>
<RadzenFieldset class="mb-4">
    <div class="row">
        <div class="align-items-center d-flex col-md-3">
            <RadzenLabel Text="Name:" />
        </div>
        <div class="col-md-9">
            <RadzenTextBox Disabled=true Placeholder=@_name style="width: 50%;" Name="Name"/>
        </div>
    </div>
    <div class="row">
        <div class="align-items-center d-flex col-md-3">
            <RadzenLabel Text="Email:" />
        </div>
        <div class="col-md-9">
            <RadzenTextBox Disabled=true Placeholder=@_email style="width: 50%;" Name="Email"/>
        </div>
    </div>
    <div class="row">
        <div class="align-items-center d-flex col-md-3">
            <RadzenLabel Text="Role:" />
        </div>
        <div class="col-md-9">
            <RadzenTextBox Disabled=true Placeholder=@_currentRole style="width: 50%;" Name="Role"/>
        </div>
    </div>
</RadzenFieldset>

<RadzenButton Click=@Edit Text="Edit profile"/>
<RadzenButton style="width: 160px" IsBusy=@_busyProfile Click=@OnBusyClickProfile Text="Save" />

<h2 style="padding-top: 2em">Profile picture:</h2>
<RadzenFieldset class="mb-4">
    <div class="row">
        <div class="align-items-center d-flex col-md-3">
            <RadzenLabel Text="Profile Picture:" />
        </div>
        <div class="col-md-9">
            @if (_account?.PictureUrl != null)
            {
                <div><img class="card-img-top" src=@_account?.PictureUrl alt="No Profile Picture" style="padding-bottom: 1em"/></div>
            }
        </div>
    </div>
</RadzenFieldset>

 <ImageUploader id=@_account?.Id isProject="false"></ImageUploader>
    
@code {

    //VARIABLES
    private bool _editing = true;
    private bool _busyProfile;
    
    private string? _name;
    private string? _email;
    private string? _currentRole;
    private string? _token;
    private AccountDetailsDto? _account;
    
    //PAGE SCRIPTS
    private void Edit()
    {
        _editing = !_editing;
    }
    protected override async Task OnInitializedAsync(){
        
            var user = (await _authenticationStateProvider.GetAuthenticationStateAsync()).User;
            _name = user.Identity?.Name;
            _currentRole = user.FindFirst(c => c.Type.Contains("appRole"))?.Value;
            _email = user.FindFirst(c => c.Type.Contains("preferred_username"))?.Value;
            _token = user.FindFirst(c => c.Type.Contains("aud"))?.Value;
            _account = await _http.GetFromJsonAsync<AccountDetailsDto>($"api/Account/{_token}");
    }
  
    private async Task OnBusyClickProfile()
    {
        _busyProfile = true;
        await Task.Delay(2000);
        UpdateProfile();
        _busyProfile = false;
        _uriHelper.NavigateTo(_uriHelper.Uri, forceLoad: true);
    }

    private void UpdateProfile()
    {
        //...
    }
}
