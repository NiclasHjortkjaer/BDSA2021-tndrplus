@page "/profile/{Token}"
@using Core.DTO
@inject HttpClient Http
@inject NavigationManager _navigationManager

<h1>Profile</h1>

@if (User == null)
{
    <p><em>Loading...</em></p>
}
else
{
<div class="row my-5">
    <div class="col-lg-6 col-xl-4 offset-lg-3 offset-xl-4">
        <RadzenCard class="m-6">
            <h3 class="h5" style="color:black;">"@User?.Name":</h3>
            <div class="d-flex flex-row">
                 @if (User?.PictureUrl != null)
                 {
                     <div><img class="card-img-top" src=@User.PictureUrl alt="Project image" style="align-content: center; justify-content: center; padding: 3em"></div>
                 }
                <div>

                    <b style="color:black;">Favorite projects (@User?.SavedProjects.Count):</b>

                    <div style="color:black;">
                        @if (User != null)
                        {
                            foreach (var project in User.SavedProjects)
                            {
                                <div><x @onclick="() => navigateToProject(project)">@project</x></div>

                            }
                        }
                    </div>
                </div>
            </div>
        </RadzenCard>
    </div>
</div>
}

@code {
    [Parameter]
    public string? Token { get; set; }
    private AccountDetailsDto? User;

    protected override async Task OnInitializedAsync()
    {
        User = await Http.GetFromJsonAsync<AccountDetailsDto>("/api/Account/"+Token);
    }

    private async Task navigateToProject(string p)
    {
        var project = await Http.GetFromJsonAsync<IReadOnlyCollection<ProjectDetailsDto>>("/api/Project/"+p);
        if (project != null)
        {
            _navigationManager.NavigateTo("/projects/" + project.ElementAt(0).Id);
        }
    }
} 