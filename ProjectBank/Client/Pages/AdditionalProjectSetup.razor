@page "/createproject/AdditionalProjectSetup/{Id}"
@inject HttpClient _http
@inject NavigationManager _navigationManager
@inject AuthenticationStateProvider _authenticationStateProvider;

<PageTitle>ProjectBank - Additional Setup</PageTitle>

<RadzenFieldset class="mb-4">
    <div class="row" style="padding: 1em">
        <div class="align-items-center d-flex col-md-3">
            <RadzenLabel Text="Project image:" />
        </div>
        <div class="col-md-9">
            @if (_project?.ImageUrl != null)
            {
                <div style="padding: 1em;"><img src="@_project.ImageUrl" alt="Project Image missing" class="img-thumbnail" style="padding: 1em"></div>
            }
            <ImageUploader Id="int.Parse(Id ?? string.Empty)" IsProject="true"></ImageUploader>
        </div>
    </div>
    <div class="row" style="padding: 1em">
        <div class="align-items-center d-flex col-md-3">
            <RadzenLabel Text="Project File:" />
        </div>
        <div class="col-md-9">
            @if (_project?.FileUrl != null)
            {
                <div style="justify-content: center; align-content: center; padding:1em;"><a style="color: #0a53be" href="@_project.FileUrl" download="@_project.FileUrl??.pdf">Project PDF</a></div>
            }
            <PdfUploader projectId="int.Parse(Id ?? String.Empty)"></PdfUploader>
        </div>
    </div>
    <div style="padding: 2em">
        <RadzenButton style="width: 160px;" BusyText="Saving ..." Click=@CompleteSetup Text="Finish" />
    </div>
</RadzenFieldset>

@code {
    [Parameter]
    public string? Id { get; set; }
    private ProjectDetailsDto? _project;

    protected override async Task OnInitializedAsync()
    {
        _project = await _http.GetFromJsonAsync<ProjectDetailsDto>($"/api/Project/{Id}");
    }

    private void CompleteSetup()
    {
       _navigationManager.NavigateTo("/projects/"+Id);
    }
}